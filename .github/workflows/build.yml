Here’s a **clean, working** GitHub Actions workflow YAML you can paste into `.github/workflows/build.yml`. It runs your Python generator, ensures the newest `bhn_ncos_schedule.yml` is copied into `_data/`, builds the Jekyll site, and deploys to Pages.

```yaml
name: Generate NCO + Build & Deploy

on:
  push:
    branches: [ main ]
    paths:
      - '**.md'
      - '**.html'
      - '_data/**'
      - '_includes/**'
      - '_layouts/**'
      - 'assets/**'
      - '_config.yml'
      - 'Gemfile'
      - 'Gemfile.lock'
      - 'scripts/**'
  schedule:
    - cron: '17 11 * * *'   # ~07:17 ET (DST)
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # --- Generate the NCO schedule ---
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: pip install pyyaml

      - name: Run generator
        run: |
          set -euo pipefail
          python scripts/build_bhn_schedule.py

      - name: Locate NEWEST schedule file & install into _data
        run: |
          set -euo pipefail
          echo "Scanning for generated schedule files…"
          RESULTS="$(find . -type f -name 'bhn_ncos_schedule.yml' -printf '%T@ %p\n' | sort -nr || true)"
          if [ -z "$RESULTS" ]; then
            echo "::error ::No bhn_ncos_schedule.yml found anywhere in the repo after generator ran."
            ls -R | sed -n '1,200p'
            exit 1
          fi
          NEWEST_PATH="$(echo "$RESULTS" | head -n1 | awk '{print $2}')"
          echo "Using newest: $NEWEST_PATH"
          mkdir -p _data
          cp -f "$NEWEST_PATH" _data/bhn_ncos_schedule.yml
          echo "----- HEAD -----"; sed -n '1,30p' _data/bhn_ncos_schedule.yml || true
          echo "----- TAIL -----"; tail -n 30 _data/bhn_ncos_schedule.yml || true

      # --- Build & upload site artifact ---
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Build site
        env:
          JEKYLL_ENV: production
        run: bundle exec jekyll build --trace

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - uses: actions/deploy-pages@v4
